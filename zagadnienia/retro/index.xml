<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Retro on [jurek333]</title>
    <link>http://jurek333.github.io/zagadnienia/retro/</link>
    <description>Recent content in Retro on [jurek333]</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl-PL</language>
    <lastBuildDate>Sat, 30 May 2020 13:05:13 +0200</lastBuildDate>
    
	<atom:link href="http://jurek333.github.io/zagadnienia/retro/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GAL16V8 - logika</title>
      <link>http://jurek333.github.io/posts/gal16v8/</link>
      <pubDate>Sat, 30 May 2020 13:05:13 +0200</pubDate>
      
      <guid>http://jurek333.github.io/posts/gal16v8/</guid>
      <description>&lt;p&gt;Procesor Z80 komunikując się z zewnętrznymi urządzeniami ustawia numer urządzenia na dolnym bajcie adresu, a zainteresowane urządzenie powinno na tej podstawie zacząć działać. Chcąc wprowadzić zewnętrzne 2 rejestry konfigurujące pracę komputera powinienem przypisać im odpowiednie 8b adresy (np. 0x00 i 0x01) i w zależności, który będzie ustawiony podczas IOREQ, ten rejestr aktualizować wartościami z szyny danych.
Mógłbym ułożyć kilka bramek logicznych które by sprawdzały czy adres wynosi 0x00 czy 0x01 i z IOREQ tworzyć puls odświeżający właściwy rejestr, ale to oznacza dużo miejsca na wiele bramek. Na miarę swoich czasów wygodnym rozwiązaniem jest Generic Array Logic.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mini ekran dla Z80</title>
      <link>http://jurek333.github.io/posts/mini-screen-for-z80/</link>
      <pubDate>Mon, 11 May 2020 19:44:45 +0200</pubDate>
      
      <guid>http://jurek333.github.io/posts/mini-screen-for-z80/</guid>
      <description>&lt;p&gt;Retro komputer odprawiający swoją magię w czeluściach scalaków bez wizualnej reprezentacji to nie najefektywniejsza rozrywka. Wykonam więc PoC z Arduino Micro i niewielkiego ekranu OLED &lt;em&gt;kartę graficzną&lt;/em&gt; i ekran.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Z80 Personal Computer</title>
      <link>http://jurek333.github.io/posts/z80-personal-computer-00/</link>
      <pubDate>Wed, 06 May 2020 16:30:27 +0200</pubDate>
      
      <guid>http://jurek333.github.io/posts/z80-personal-computer-00/</guid>
      <description>&lt;p&gt;Projekt 8 bitowego komputera osobistego opartego na procesorze Zilog Z80. Procesor ten trafił na rynek w 1976 roku. Jest on kompatybilny z Intelem 8080. Posiada 8-bitową szynę danych i 16-bitową szynę adresową. Najbardziej jest chyba znany z komputerów Sinclair ZX Spectrum i Elwro 800 Junior. Wciąż jest łatwo dostępny jako scalak DIP-40 i świetnie nadaje się do budowy domowego komputera.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>